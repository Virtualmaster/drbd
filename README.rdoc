= DRBD

Ruby wrapper for DRBD

== It is usefull for

* Connect to server over SSH 
* Parse current running configuration
* Parse current status

== Limitations

* Best with drbd version > 8.3.7
* Hostname used for connection must be one of hostnames in drbd.conf (FQDN ideally)
* It'sJust one-morning's prototype, take patience
* No tests
* No documentation
* Absolutely no warranty, use it at your own risk

== Installation

<code>gem install drbd</code>


== How it works
- simply fetch data from remote host

  <tt>d = Drbd.new("fqdn.domain.tld")</tt>

  you can specify command to be executed 

  <tt>d = Drbd.new("fqdn.domain.tld", :command => 'sudo /sbin/drbdadm')</tt>

- obtain array of configured configured resources
  
  <tt>r = d.resources.first</tt>

- get resource name
  
  <tt>r.name</tt>

- get resource protocol
  
  <tt>r.protocol</tt>

- get hosts for resource
  
  <tt>r.hosts</tt>

- get status for resource
  
  <tt>r.status</tt>

- get node addresses
  
  <tt>r.hosts.map{|h| h.address }</tt>

- get status
  
  resource status is hash with keys:
  
  [:cs, :resynced_percent, :minor, :ro1, :ds1, :ro2, :ds2, :name]
  
  <tt>r.status</tt>

- find resource by name
  
  <tt>r = d.find_resource_by_name("r0")</tt>

- find resource by backing disk
  
  <tt>r = d.find_resource_by_disk("/dev/volgroup-logvolume--name")</tt>

- true if both of devices are UpToDate
  
  <tt>r.consinstent?</tt>

- true if resynced_percent is present in status
  
  <tt>r.resync_running?</tt>

- true if resource status is "Connected"
  
  <tt>r.up?</tt>

- true if resource status is "Unconfigured"
  
  <tt>r.down?</tt>

- stateless perform drbdadm up on resource (use at your own risk!)
  
  <tt>r.up!</tt>

- stateless perform drbdadm down on resource (use at your own risk!)
  
  <tt>r.down!</tt>

- stateless perform forced drbdadm create-md on resource (use at your own risk!)
  
  if resource is not down, returns false and does nothing
  
  <tt>r.init_metadata</tt>
  
  
  
- back-reference to the DRBD object
  
  <tt>r.drbd</tt>

- uptate status of all resources
  
  <tt>r.drbd.load_status!</tt>

  <tt>d.load_status!</tt>

== TODO

* Replace IO.popen("ssh ...") with native ruby net/ssh
* Add states to actions (analyze exit status)
* Test suite


== Copyright

Copyright (c) 2011 Adam Kliment. See LICENSE for details.
